{"version":3,"sources":["webpack:///../../../src/components/VExpansionPanel/VExpansionPanels.ts","webpack:///../../../src/components/VExpansionPanel/VExpansionPanelContent.ts","webpack:///../../../src/components/VGrid/grid.ts","webpack:///../../../src/components/VGrid/VContainer.ts","webpack:///./src/views/web/PreguntasFrecuentes.vue?95d9","webpack:///src/views/web/PreguntasFrecuentes.vue","webpack:///./src/views/web/PreguntasFrecuentes.vue?07ca","webpack:///./src/views/web/PreguntasFrecuentes.vue","webpack:///../../../src/components/VExpansionPanel/VExpansionPanelHeader.ts","webpack:///../../../src/components/VExpansionPanel/VExpansionPanel.ts"],"names":["name","provide","expansionPanels","this","props","accordion","disabled","focusable","inset","popout","readonly","Boolean","computed","classes","created","$attrs","hasOwnProperty","Array","value","length","methods","updateItem","getValue","item","nextValue","index","toggleMethod","baseMixins","isActive","expansionPanel","beforeDestroy","render","h","staticClass","directives","showLazyContent","class","functional","id","tag","type","default","children","data","attrs","Object","key","fluid","mergeData","_vm","_h","$createElement","_c","_self","_b","title","_l","faq","f","on","$event","setFaqActive","Id","Active","_v","_s","Titulo","Texto","i","domProps","_e","staticRenderFns","component","VCol","VContainer","VExpansionPanel","VExpansionPanelContent","VExpansionPanelHeader","VExpansionPanels","VImg","VRow","ripple","disableIconRotate","expandIcon","hideActions","hasMousedown","isDisabled","isReadonly","onClick","genIcon","icon","tabindex","click","mousedown","mouseup","open","content","header","nextIsActive","groupClasses","registerContent","unregisterContent","registerHeader","vm","unregisterHeader","e","toggle","isBooted","String"],"mappings":"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","file":"js/chunk-5d4d5e71.14953261.js","sourcesContent":["// Styles\nimport './VExpansionPanel.sass'\n\n// Components\nimport { BaseItemGroup, GroupableInstance } from '../VItemGroup/VItemGroup'\nimport VExpansionPanel from './VExpansionPanel'\n\n// Utilities\nimport { breaking } from '../../util/console'\n\n// Types\ninterface VExpansionPanelInstance extends InstanceType<typeof VExpansionPanel> {}\n\n/* @vue/component */\nexport default BaseItemGroup.extend({\n  name: 'v-expansion-panels',\n\n  provide (): object {\n    return {\n      expansionPanels: this,\n    }\n  },\n\n  props: {\n    accordion: Boolean,\n    disabled: Boolean,\n    focusable: Boolean,\n    inset: Boolean,\n    popout: Boolean,\n    readonly: Boolean,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...BaseItemGroup.options.computed.classes.call(this),\n        'v-expansion-panels': true,\n        'v-expansion-panels--accordion': this.accordion,\n        'v-expansion-panels--focusable': this.focusable,\n        'v-expansion-panels--inset': this.inset,\n        'v-expansion-panels--popout': this.popout,\n      }\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('expand')) {\n      breaking('expand', 'multiple', this)\n    }\n\n    /* istanbul ignore next */\n    if (\n      Array.isArray(this.value) &&\n      this.value.length > 0 &&\n      typeof this.value[0] === 'boolean'\n    ) {\n      breaking(':value=\"[true, false, true]\"', ':value=\"[0, 2]\"', this)\n    }\n  },\n\n  methods: {\n    updateItem (item: GroupableInstance & VExpansionPanelInstance, index: number) {\n      const value = this.getValue(item, index)\n      const nextValue = this.getValue(item, index + 1)\n\n      item.isActive = this.toggleMethod(value)\n      item.nextIsActive = this.toggleMethod(nextValue)\n    },\n  },\n})\n","// Components\nimport VExpansionPanel from './VExpansionPanel'\nimport { VExpandTransition } from '../transitions'\n\n// Mixins\nimport Bootable from '../../mixins/bootable'\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode, VueConstructor } from 'vue'\n\nconst baseMixins = mixins(\n  Bootable,\n  RegistrableInject<'expansionPanel', VueConstructor<Vue>>('expansionPanel', 'v-expansion-panel-content', 'v-expansion-panel')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  expansionPanel: InstanceType<typeof VExpansionPanel>\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-expansion-panel-content',\n\n  computed: {\n    isActive (): boolean {\n      return this.expansionPanel.isActive\n    },\n  },\n\n  created () {\n    this.expansionPanel.registerContent(this)\n  },\n\n  beforeDestroy () {\n    this.expansionPanel.unregisterContent()\n  },\n\n  render (h): VNode {\n    return h(VExpandTransition, [\n      h('div', {\n        staticClass: 'v-expansion-panel-content',\n        directives: [{\n          name: 'show',\n          value: this.isActive,\n        }],\n      }, this.showLazyContent([\n        h('div', { class: 'v-expansion-panel-content__wrap' }, getSlot(this)),\n      ])),\n    ])\n  },\n})\n","// Types\nimport Vue, { VNode } from 'vue'\n\nexport default function VGrid (name: string) {\n  /* @vue/component */\n  return Vue.extend({\n    name: `v-${name}`,\n\n    functional: true,\n\n    props: {\n      id: String,\n      tag: {\n        type: String,\n        default: 'div',\n      },\n    },\n\n    render (h, { props, data, children }): VNode {\n      data.staticClass = (`${name} ${data.staticClass || ''}`).trim()\n\n      const { attrs } = data\n      if (attrs) {\n        // reset attrs to extract utility clases like pa-3\n        data.attrs = {}\n        const classes = Object.keys(attrs).filter(key => {\n          // TODO: Remove once resolved\n          // https://github.com/vuejs/vue/issues/7841\n          if (key === 'slot') return false\n\n          const value = attrs[key]\n\n          // add back data attributes like data-test=\"foo\" but do not\n          // add them as classes\n          if (key.startsWith('data-')) {\n            data.attrs![key] = value\n            return false\n          }\n\n          return value || typeof value === 'string'\n        })\n\n        if (classes.length) data.staticClass += ` ${classes.join(' ')}`\n      }\n\n      if (props.id) {\n        data.domProps = data.domProps || {}\n        data.domProps.id = props.id\n      }\n\n      return h(props.tag, data, children)\n    },\n  })\n}\n","import './_grid.sass'\nimport './VGrid.sass'\n\nimport Grid from './grid'\n\nimport mergeData from '../../util/mergeData'\n\n/* @vue/component */\nexport default Grid('container').extend({\n  name: 'v-container',\n  functional: true,\n  props: {\n    id: String,\n    tag: {\n      type: String,\n      default: 'div',\n    },\n    fluid: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  render (h, { props, data, children }) {\n    let classes\n    const { attrs } = data\n    if (attrs) {\n      // reset attrs to extract utility clases like pa-3\n      data.attrs = {}\n      classes = Object.keys(attrs).filter(key => {\n        // TODO: Remove once resolved\n        // https://github.com/vuejs/vue/issues/7841\n        if (key === 'slot') return false\n\n        const value = attrs[key]\n\n        // add back data attributes like data-test=\"foo\" but do not\n        // add them as classes\n        if (key.startsWith('data-')) {\n          data.attrs![key] = value\n          return false\n        }\n\n        return value || typeof value === 'string'\n      })\n    }\n\n    if (props.id) {\n      data.domProps = data.domProps || {}\n      data.domProps.id = props.id\n    }\n\n    return h(\n      props.tag,\n      mergeData(data, {\n        staticClass: 'container',\n        class: Array<any>({\n          'container--fluid': props.fluid,\n        }).concat(classes || []),\n      }),\n      children\n    )\n  },\n})\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('v-container',{staticClass:\"faq_container\"},[_c('title-ribbon',_vm._b({},'title-ribbon',{ title: \"Preguntas Frecuentes\" },false)),_c('div',{staticClass:\"faq_container__main\"},[_c('v-row',{staticClass:\"faq_row__img\"},[_c('v-col',[_c('v-img',{attrs:{\"src\":\"https://res.cloudinary.com/dkod5pdlc/image/upload/f_auto/terapiacl/general/preguntas-frecuentes-psicologia\"}})],1)],1),_c('splitter'),_c('v-row',{staticClass:\"faq_row__panels\"},[_c('v-col',[_c('v-expansion-panels',_vm._l((_vm.processedFaqs),function(faq,f){return _c('v-expansion-panel',{key:f,on:{\"click\":function($event){return _vm.setFaqActive(faq.Id)}}},[_c('v-expansion-panel-header',{class:faq.Active === true ? 'faq-active' : 'faq-inactive'},[_vm._v(\" \"+_vm._s(faq.Titulo)+\" \")]),_c('v-expansion-panel-content',[_c('p',[_vm._v(_vm._s(faq.Texto))]),(faq.Items)?_c('ul',_vm._l((faq.Items),function(item,i){return _c('li',{key:i,domProps:{\"innerHTML\":_vm._s(item)}})}),0):_vm._e()])],1)}),1)],1)],1),_c('splitter-volver')],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <v-container class=\"faq_container\">\r\n      <title-ribbon v-bind=\"{ title: `Preguntas Frecuentes` }\" />\r\n      <div class=\"faq_container__main\">\r\n        <v-row class=\"faq_row__img\">\r\n          <v-col>\r\n            <v-img\r\n              src=\"https://res.cloudinary.com/dkod5pdlc/image/upload/f_auto/terapiacl/general/preguntas-frecuentes-psicologia\"\r\n            />\r\n          </v-col>\r\n        </v-row>\r\n        <splitter />\r\n        <v-row class=\"faq_row__panels\">\r\n          <v-col>\r\n            <v-expansion-panels>\r\n              <v-expansion-panel\r\n                v-for=\"(faq, f) in processedFaqs\"\r\n                :key=\"f\"\r\n                @click=\"setFaqActive(faq.Id)\"\r\n              >\r\n                <v-expansion-panel-header\r\n                  :class=\"faq.Active === true ? 'faq-active' : 'faq-inactive'\"\r\n                >\r\n                  {{ faq.Titulo }}\r\n                </v-expansion-panel-header>\r\n                <v-expansion-panel-content>\r\n                  <p>{{ faq.Texto }}</p>\r\n                  <ul v-if=\"faq.Items\">\r\n                    <li\r\n                      v-for=\"(item, i) in faq.Items\"\r\n                      :key=\"i\"\r\n                      v-html=\"item\"\r\n                    />\r\n                  </ul>\r\n                </v-expansion-panel-content>\r\n              </v-expansion-panel>\r\n            </v-expansion-panels>\r\n          </v-col>\r\n        </v-row>\r\n        <splitter-volver />\r\n      </div>\r\n    </v-container>\r\n  </div>\r\n</template>\r\n<script>\r\n  export default {\r\n    name: 'PregutasFrecuentes',\r\n    components: {\r\n      TitleRibbon: () => import('@/components/web/base/TitleRibbon'),\r\n      Splitter: () => import('@/components/web/base/Splitter'),\r\n      SplitterVolver: () => import('@/components/web/base/SplitterVolver'),\r\n    },\r\n    data () {\r\n      return {\r\n        faqs: require('@/data/faqs.json'),\r\n        processedFaqs: '',\r\n      }\r\n    },\r\n    created () {\r\n      this.setFaqActive()\r\n    },\r\n    methods: {\r\n      setFaqActive (id = false) {\r\n        const processed = []\r\n        this.faqs.map(item => {\r\n          if (id && item.Id === id) {\r\n            item.Active = !item.Active\r\n            console.log(item)\r\n          } else {\r\n            item.Active = false\r\n          }\r\n          processed.push(item)\r\n        })\r\n        this.processedFaqs = processed\r\n      },\r\n    },\r\n    metaInfo: {\r\n      title: 'Preguntas Frecuentes',\r\n      titleTemplate: '%s - Centro de Terapia del Comportamiento',\r\n      htmlAttrs: {\r\n        lang: 'es',\r\n        amp: true,\r\n      },\r\n    },\r\n  }\r\n</script>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PreguntasFrecuentes.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PreguntasFrecuentes.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./PreguntasFrecuentes.vue?vue&type=template&id=bfc4cbc2&\"\nimport script from \"./PreguntasFrecuentes.vue?vue&type=script&lang=js&\"\nexport * from \"./PreguntasFrecuentes.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VCol } from 'vuetify/lib/components/VGrid';\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VExpansionPanel } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanelContent } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanelHeader } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanels } from 'vuetify/lib/components/VExpansionPanel';\nimport { VImg } from 'vuetify/lib/components/VImg';\nimport { VRow } from 'vuetify/lib/components/VGrid';\ninstallComponents(component, {VCol,VContainer,VExpansionPanel,VExpansionPanelContent,VExpansionPanelHeader,VExpansionPanels,VImg,VRow})\n","// Components\nimport { VFadeTransition } from '../transitions'\nimport VExpansionPanel from './VExpansionPanel'\nimport VIcon from '../VIcon'\n\n// Mixins\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Directives\nimport ripple from '../../directives/ripple'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode, VueConstructor } from 'vue'\n\nconst baseMixins = mixins(\n  RegistrableInject<'expansionPanel', VueConstructor<Vue>>('expansionPanel', 'v-expansion-panel-header', 'v-expansion-panel')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  $el: HTMLElement\n  expansionPanel: InstanceType<typeof VExpansionPanel>\n}\n\nexport default baseMixins.extend<options>().extend({\n  name: 'v-expansion-panel-header',\n\n  directives: { ripple },\n\n  props: {\n    disableIconRotate: Boolean,\n    expandIcon: {\n      type: String,\n      default: '$expand',\n    },\n    hideActions: Boolean,\n    ripple: {\n      type: [Boolean, Object],\n      default: false,\n    },\n  },\n\n  data: () => ({\n    hasMousedown: false,\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-expansion-panel-header--active': this.isActive,\n        'v-expansion-panel-header--mousedown': this.hasMousedown,\n      }\n    },\n    isActive (): boolean {\n      return this.expansionPanel.isActive\n    },\n    isDisabled (): boolean {\n      return this.expansionPanel.isDisabled\n    },\n    isReadonly (): boolean {\n      return this.expansionPanel.isReadonly\n    },\n  },\n\n  created () {\n    this.expansionPanel.registerHeader(this)\n  },\n\n  beforeDestroy () {\n    this.expansionPanel.unregisterHeader()\n  },\n\n  methods: {\n    onClick (e: MouseEvent) {\n      this.$emit('click', e)\n    },\n    genIcon () {\n      const icon = getSlot(this, 'actions') ||\n        [this.$createElement(VIcon, this.expandIcon)]\n\n      return this.$createElement(VFadeTransition, [\n        this.$createElement('div', {\n          staticClass: 'v-expansion-panel-header__icon',\n          class: {\n            'v-expansion-panel-header__icon--disable-rotate': this.disableIconRotate,\n          },\n          directives: [{\n            name: 'show',\n            value: !this.isDisabled,\n          }],\n        }, icon),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    return h('button', {\n      staticClass: 'v-expansion-panel-header',\n      class: this.classes,\n      attrs: {\n        tabindex: this.isDisabled ? -1 : null,\n        type: 'button',\n      },\n      directives: [{\n        name: 'ripple',\n        value: this.ripple,\n      }],\n      on: {\n        ...this.$listeners,\n        click: this.onClick,\n        mousedown: () => (this.hasMousedown = true),\n        mouseup: () => (this.hasMousedown = false),\n      },\n    }, [\n      getSlot(this, 'default', { open: this.isActive }, true),\n      this.hideActions || this.genIcon(),\n    ])\n  },\n})\n","// Components\nimport VExpansionPanels from './VExpansionPanels'\nimport VExpansionPanelHeader from './VExpansionPanelHeader'\nimport VExpansionPanelContent from './VExpansionPanelContent'\n\n// Mixins\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\ntype VExpansionPanelHeaderInstance = InstanceType<typeof VExpansionPanelHeader>\ntype VExpansionPanelContentInstance = InstanceType<typeof VExpansionPanelContent>\n\nexport default mixins(\n  GroupableFactory<'expansionPanels', typeof VExpansionPanels>('expansionPanels', 'v-expansion-panel', 'v-expansion-panels'),\n  RegistrableProvide('expansionPanel', true)\n  /* @vue/component */\n).extend({\n  name: 'v-expansion-panel',\n\n  props: {\n    disabled: Boolean,\n    readonly: Boolean,\n  },\n\n  data () {\n    return {\n      content: null as VExpansionPanelContentInstance | null,\n      header: null as VExpansionPanelHeaderInstance | null,\n      nextIsActive: false,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-expansion-panel--active': this.isActive,\n        'v-expansion-panel--next-active': this.nextIsActive,\n        'v-expansion-panel--disabled': this.isDisabled,\n        ...this.groupClasses,\n      }\n    },\n    isDisabled (): boolean {\n      return this.expansionPanels.disabled || this.disabled\n    },\n    isReadonly (): boolean {\n      return this.expansionPanels.readonly || this.readonly\n    },\n  },\n\n  methods: {\n    registerContent (vm: VExpansionPanelContentInstance) {\n      this.content = vm\n    },\n    unregisterContent () {\n      this.content = null\n    },\n    registerHeader (vm: VExpansionPanelHeaderInstance) {\n      this.header = vm\n      vm.$on('click', this.onClick)\n    },\n    unregisterHeader () {\n      this.header = null\n    },\n    onClick (e: MouseEvent) {\n      if (e.detail) this.header!.$el.blur()\n\n      this.$emit('click', e)\n\n      this.isReadonly || this.isDisabled || this.toggle()\n    },\n    toggle () {\n      /* istanbul ignore else */\n      if (this.content) this.content.isBooted = true\n      this.$nextTick(() => this.$emit('change'))\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-expansion-panel',\n      class: this.classes,\n      attrs: {\n        'aria-expanded': String(this.isActive),\n      },\n    }, getSlot(this))\n  },\n})\n"],"sourceRoot":""}